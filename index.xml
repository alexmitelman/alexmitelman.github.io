<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Alex Mitelman</title>
    <link>https://mitelman.engineering/</link>
    <description>Recent content on Alex Mitelman</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 10 May 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://mitelman.engineering/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>System Design Weekly 009: May 2021</title>
      <link>https://mitelman.engineering/system-design-weekly/009/</link>
      <pubDate>Mon, 10 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://mitelman.engineering/system-design-weekly/009/</guid>
      <description>Highlights Instacart: Don’t let the crows guide your routes Instacart connects shoppers to make purchases and deliver them to the app customers. To make it more efficient, the application should calculate optimal routes to make purchases and deliver orders.
The easiest and the most naïve solution to calculate the path between two dots on a map is to calculate Haversine Distance - a straight line between two dots, similar to a bird flying between them.</description>
    </item>
    
    <item>
      <title>System Design Weekly 008: May 2021</title>
      <link>https://mitelman.engineering/system-design-weekly/008/</link>
      <pubDate>Mon, 03 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://mitelman.engineering/system-design-weekly/008/</guid>
      <description>Highlights DoorDash: Optimizing OpenTelemetry’s Span Processor for High Throughput and Low CPU Costs With an effort to migrate from the monolith to microservices, there is a need to trace requests between these services. OpenTelemetry is a new project aiming to become a standard. As a request hits a system, OpenTelemetry assigns a unique ID, all the underlying services (called spans) receive the same ID. Spans data is being collected on a local collector, then it&amp;rsquo;s sent to a collector gateway.</description>
    </item>
    
    <item>
      <title>System Design Weekly 007: April 2021</title>
      <link>https://mitelman.engineering/system-design-weekly/007/</link>
      <pubDate>Mon, 19 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://mitelman.engineering/system-design-weekly/007/</guid>
      <description>Highlights FullContact: Improving the Graph: Transition to ScyllaDB FullContact set an ambitious goal of 10,000 QPS. Initially, they moved their database from HBase to Cassandra. Cluster consisted of 3 instances of c5.2xlarge EC2 + 2 TB of gp2 EBS storage. With the growing amount of records in the database, response time crept from 100 ms to 300 ms. It turned out that the default Size Tiered Compaction Strategy is optimized for inserts which lead to a single file for SSTable.</description>
    </item>
    
    <item>
      <title>System Design Weekly 006: April 2021</title>
      <link>https://mitelman.engineering/system-design-weekly/006/</link>
      <pubDate>Tue, 13 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://mitelman.engineering/system-design-weekly/006/</guid>
      <description>Highlights GitHub: How we scaled the API with a sharded, replicated rate limiter in Redis GitHub API has a limit on API calls per key. Such keys were stored in Memcached along with their reset_at value and number of calls. Memcached was also used for application caching purposes.
Such a solution works well but harder to scale. It was decided to have one Memcached per datacenter, in which case clients can face some issues if requests hit different datacenters.</description>
    </item>
    
    <item>
      <title>System Design Weekly 005: April 2021</title>
      <link>https://mitelman.engineering/system-design-weekly/005/</link>
      <pubDate>Mon, 05 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://mitelman.engineering/system-design-weekly/005/</guid>
      <description>Highlights Kiwi.com: Nonstop Operations with Scylla Even Through the OVHcloud Fire Fire on French OVHcloud affected four datacenters: SBG2 was destroyed, SBG1 adjacent rooms were partially on fire, SBG3 and SBG4 were switched off to fight the fire. Overall, 3.6 million websites were affected, including banks and mail servers.
Kiwi.com uses Scylla - NoSQL database, as a highly available and resilient solution. Their monitoring system detected spikes as nodes went down but later other OVHcloud datacenters took over the requests.</description>
    </item>
    
    <item>
      <title>System Design Weekly 004: March 2021</title>
      <link>https://mitelman.engineering/system-design-weekly/004/</link>
      <pubDate>Mon, 29 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://mitelman.engineering/system-design-weekly/004/</guid>
      <description>Highlights Aurora: Payment Acquiring Solution with CockroachDB on Kubernetes Aurora is the company that handles credit card payments. Such transactions should work all the time, be consistent and scalable. That&amp;rsquo;s why they migrate from PostgreSQL to CockroachDB: eventual consistency is not an option in this business. CockroachDB guarantees serializable transactions. This blog post describes higher level architecture of the solution. Tech stack: .NET Core C#, ReactJS, CockroachDB.
Key takeaways. Hybryd-Cloud: Google Cloud + 2 co-location, never be 100% cloud or 100% private, hence no vendor lock, better availability if certain cloud provider goes down.</description>
    </item>
    
    <item>
      <title>System Design Weekly 003: March 2021</title>
      <link>https://mitelman.engineering/system-design-weekly/003/</link>
      <pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://mitelman.engineering/system-design-weekly/003/</guid>
      <description>Highlights Slack: Migrating Millions of Concurrent Websockets to Envoy Slack makes an extensive use of websocket technology for their messaging service. Historically, they used HAProxy as a load balance, however, they faced an issue with dynamic updates of a list of endpoints. They could also change config and restart a load balancer which is tricky as it has to maintain existing websocket connections.
They&amp;rsquo;ve decided to switch to Envoy proxy as it allows dynamic change of the configuration.</description>
    </item>
    
    <item>
      <title>System Design Weekly 002: March 2021</title>
      <link>https://mitelman.engineering/system-design-weekly/002/</link>
      <pubDate>Mon, 15 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://mitelman.engineering/system-design-weekly/002/</guid>
      <description>Highlights Cloudflare: The benefits of serving stale DNS entries when using Consul Cloudflare faced an issue with long latencies for DNS responses in certain parts of the world. In addition DNS over TLS is also a factor. They use Unbound as a DNS resolver. For a better failover, they set 30 seconds TTL for such responses.
There are two options to solve this problem. The first is prefetching. This means that on each request TTL is checked.</description>
    </item>
    
    <item>
      <title>System Design Weekly 001: March 2021</title>
      <link>https://mitelman.engineering/system-design-weekly/001/</link>
      <pubDate>Mon, 08 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://mitelman.engineering/system-design-weekly/001/</guid>
      <description>Highlights Reddit: Scaling Reporting Reddit had an ad analytics system that aggregated data per ad ID and per day. This data was stored in Redis as a Thrift object. This works well if an advertiser wants to see analytics for a given day. However, looking up stats per range of dates means that application had to get every value for every date in the range of dates, deserialize Thrift dictionaries, which is also a CPU intensive operation.</description>
    </item>
    
    <item>
      <title>Python Best Practices for a New Project in 2021</title>
      <link>https://mitelman.engineering/blog/python-best-practice/automating-python-best-practices-for-a-new-project/</link>
      <pubDate>Sun, 18 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://mitelman.engineering/blog/python-best-practice/automating-python-best-practices-for-a-new-project/</guid>
      <description>Intro The goal of this tutorial is to describe Python development ecosystem. It can be helpful for someone coming to Python from another programming language.
They say that you should stick to algorithms and data structures, that you can learn a new language in just a couple of weeks, that it&amp;rsquo;s just a new syntax. I completely agree that algorithms and data structures are extremely important but when it comes to language it&amp;rsquo;s slightly more than just syntax.</description>
    </item>
    
  </channel>
</rss>
